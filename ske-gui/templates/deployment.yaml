apiVersion: apps/v1
kind: Deployment
metadata:
  name: ske-gui
  namespace: kratix-platform-system
  labels:
    {{- include "ske-gui.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ske-gui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ske-gui.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      serviceAccountName: {{ include "ske-gui.serviceAccountName" . }}
      containers:
        - name: ske-gui
          image: "{{ .Values.imageRegistry.host }}/{{ .Values.imageRegistry.imageName }}:{{ .Values.imageRegistry.imageVersion }}"
          imagePullPolicy: {{ .Values.imageRegistry.imagePullPolicy | default "IfNotPresent" }}
          args:
            - "-in-cluster"
            - "-plugins-dir=/headlamp/plugins"
          env:
            - name: HEADLAMP_CONFIG_TRACING_ENABLED
              value: "true"
            - name: HEADLAMP_CONFIG_METRICS_ENABLED
              value: "true"
            - name: HEADLAMP_CONFIG_OTLP_ENDPOINT
              value: "otel-collector:4317"
            - name: HEADLAMP_CONFIG_SERVICE_NAME
              value: "headlamp"
            - name: HEADLAMP_CONFIG_SERVICE_VERSION
              value: "latest"
            {{- if .Values.oidc }}
            - name: HEADLAMP_CONFIG_OIDC_IDP_ISSUER_URL
              value: {{ .Values.oidc.issuerUrl | quote }}
            - name: HEADLAMP_CONFIG_OIDC_CLIENT_ID
              value: {{ .Values.oidc.clientId | quote }}
            - name: HEADLAMP_CONFIG_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: headlamp-oidc-secret
                  key: client-secret
            - name: HEADLAMP_CONFIG_OIDC_SCOPES
              value: {{ .Values.oidc.scopes | default "profile,email" }}
            {{- end }}
          ports:
            - name: http
              containerPort: 4466
            - name: metrics
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: "/"
              port: http
          readinessProbe:
            httpGet:
              path: "/"
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      imagePullSecrets:
        - name: '{{ .Values.imageRegistry.imagePullSecret | default "syntasso-registry" }}'
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
