{{- define "patch" }}
spec:
  template:
    spec:
      containers:
        {{- .container | list | toYaml | nindent 8 }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: '{{ .Values.imageRegistry.imagePullSecret | default "syntasso-registry" }}'
{{- end }}

{{- define "containerPatch" }}
{{- with .Values.controller.resources }}
resources:
  {{- . | toYaml | nindent 2 }}
{{- end }}
{{- end }}

{{- $manifest := .Files.Get "files/backstage-controller.yaml" | fromYaml }}
{{- $container := index $manifest.spec.template.spec.containers 0
                  | merge (include "containerPatch" . | fromYaml) }}

{{- $newName := printf "%s/%s" .Values.imageRegistry.host .Values.imageRegistry.controllerImage.name }}
{{- $newTag := .Chart.AppVersion }}
{{- $_ := set $container "image" (printf "%s:%s" $newName $newTag) }}
{{- $_ := set $manifest.spec.template "spec" (omit $manifest.spec.template.spec "containers" "imagePullSecrets") }}

{{- $manifest
      | merge (include "patch" (merge . (dict "container" $container)) | fromYaml)
      | toYaml }}
