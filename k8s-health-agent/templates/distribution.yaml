apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
    control-plane: controller-manager
  name: k8s-health-agent-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-controller-manager
  namespace: k8s-health-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-leader-election-role
  namespace: k8s-health-agent-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-healthdefinition-editor-role
rules:
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-healthdefinition-viewer-role
rules:
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-healthstate-editor-role
rules:
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthstates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthstates/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-healthstate-viewer-role
rules:
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthstates
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthstates/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-health-agent-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs/finalizers
    verbs:
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions
      - healthstates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions/finalizers
      - healthstates/finalizers
    verbs:
      - update
  - apiGroups:
      - platform.kratix.io
    resources:
      - healthdefinitions/status
      - healthstates/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - bind
      - create
      - delete
      - escalate
      - get
      - list
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-health-agent-metrics-auth-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-health-agent-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-leader-election-rolebinding
  namespace: k8s-health-agent-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-health-agent-leader-election-role
subjects:
  - kind: ServiceAccount
    name: k8s-health-agent-controller-manager
    namespace: k8s-health-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
  name: k8s-health-agent-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-health-agent-manager-role
subjects:
  - kind: ServiceAccount
    name: k8s-health-agent-controller-manager
    namespace: k8s-health-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-health-agent-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-health-agent-metrics-auth-role
subjects:
  - kind: ServiceAccount
    name: k8s-health-agent-controller-manager
    namespace: k8s-health-agent-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
    control-plane: controller-manager
  name: k8s-health-agent-controller-manager-metrics-service
  namespace: k8s-health-agent-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-health-agent
    control-plane: controller-manager
  name: k8s-health-agent-controller-manager
  namespace: k8s-health-agent-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --metrics-bind-address=:8443
            - --leader-elect
            - --health-probe-bind-address=:8081
          command:
            - /manager
          env:
            - name: HEALTH_CHECK_ADAPTER_IMG
              valueFrom:
                configMapKeyRef:
                  key: HEALTH_CHECK_ADAPTER_IMG
                  name: k8s-health-agent-config
          image: registry.syntasso.io/syntasso/k8s-health-agent:v0.3.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-health-agent-controller-manager
      terminationGracePeriodSeconds: 10
